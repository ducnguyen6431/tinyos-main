<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ae438a8d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ae4388b1870"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ae4388b1870"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ae4388aea00"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2ae438a87e20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438c97140"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae438c97140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ada610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2ae438a83340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438cafb00"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae438cafb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ada610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2ae438a94830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438ca8490"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae438ca8490"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ada610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae438a998d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae438aa5080"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae438aa5080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae438ab7a70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae4388b3d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438ae9410"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ae438a720c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ae4387b0460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ae4387b0460"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ae438873230"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ae438a72ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae4388b2de0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae4388b2de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae4388c10c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae438a71210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ae4388b3d90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae4388bc020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae438a53020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ae4388c0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438a54910"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ae4388c17a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438ad5600"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ae4388c17a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ae4388c49e0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ae4388c49e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ae4388c7530"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ae4388ca110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ae4388bcd50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2ae4388cead0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2ae4388de060"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ae4388de060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae438964da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ae4388c5cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ae4388ca110"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ae438917cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438a05120"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ae4388f34e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae4389922b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae4389922b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e2fe20"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ae438907350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae4389a58f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae4389a58f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e9c3f0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ae43890dcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae4389ba8f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae4389ba8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f1a3f0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ae4388dc670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae4389612b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae4389612b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438cffe20"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ae438910670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae4389aa5d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae4389aa5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f21e20"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ae4388dacb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae43896ba20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae43896ba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d68c90"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ae4388edcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae43897d020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae43897d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438dc10a0"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ae438900e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae43898f760"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae43898f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e496d0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ae438904cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae4389a2da0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae4389a2da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438eb9e20"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ae4388d4800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae4389678f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae4389678f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438cf0e20"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ae4388e5670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae438979020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae438979020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d5e3f0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ae4388f8670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae43898b5d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae43898b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438dda9b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ae4388fc670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae43899ec10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae43899ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e3e0a0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ae438909670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae4389b6da0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae4389b6da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f11e20"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ae438913b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438a0a120"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ae4388facb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae4389a75d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae4389a75d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438ea3e20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae438964da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d066d0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ae4388e1020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae4389755d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae4389755d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d75e20"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ae4389154e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438a006d0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ae4388ef670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae438980d30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae438980d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438dc8c90"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ae4388f2800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae438991440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae438991440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e2b0a0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ae438906670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae4389a4a80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae4389a4a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438ebf6d0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ae43890b020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae4389b9a80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae4389b9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f176d0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ae4388db990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae438972440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae438972440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d1b0a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ae4388e7020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae43896ac10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae43896ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d65e20"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ae4388ea020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae43898d2b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae43898d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438de03f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ae4388fe060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae43898e8f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae43898e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e469b0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ae438902020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae4389a0020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae4389a0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438eb40a0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ae4388d3b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae438966a80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae438966a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438cec0a0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ae4388e4990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae4389782b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae4389782b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d7c6d0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ae4388f7990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae43898a760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae43898a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438dd6e20"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ae438918990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae4389b4020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae4389b4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f350a0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ae4388f4020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae438993020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae438993020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e32c90"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ae438908020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae4389a6760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae4389a6760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e9f0a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ae43890e990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae4389a9760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae4389a9760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f1d0a0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ae438912e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438a196d0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ae4388dd350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae438962020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae438962020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d029b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ae4388f0350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae438974760"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae438974760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d710a0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ae438901350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae4389ab460"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae4389ab460"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438efcc90"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ae4388ee990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae43897fe60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae43897fe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438dc5e20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ae4388f1b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae4389905d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae4389905d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e4c3f0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ae438905990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae4389a3c10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae4389a3c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438ebc9b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ae43890a350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae4389b8c10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae4389b8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438f149b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ae4388c8580"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae4389686b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae4389686b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438cf39b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ae4388e6350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae43897bda0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae43897bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d610a0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ae4388e9350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae43898c440"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae43898c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438ddd6d0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ae4388fd350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae43899fa80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae43899fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438e43e20"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ae438914800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438a10c90"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ae4388fb990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae4389a83f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae4389a83f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438ea6c90"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ae4388f6cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae4389898f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae4389898f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438dd20a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ae4388e0e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae438965c10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae438965c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d093f0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ae4388e3cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae438977440"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae438977440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae438d799b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ae4387a8320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae4388711d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ae43887c740"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ae43887f250"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae438895690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae438ba14c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae438ad5600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438ab7470"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ae438ab5210"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ae438ab8e00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ae438ab8e00"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ae4388d3b20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ae438ab44d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ae438ad7060"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ae438ad7060"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ae4388d4800"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ae438ab37f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ae438ad6380"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ae438ad6380"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ae4388c8580"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ada610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ae8210"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ae8210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438c7b150"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae438ae9410"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438af32c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ae438af7a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ae438c8b790"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae438af32c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438bfbc80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ae438c93640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438c3b830"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae438c36cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ae438af2260"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ae438af2260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae438bfa530"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae438c8aa60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ae438b12910"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ae438b12910"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae438c138d0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae438c138d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae439011b80"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae438bfbc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae438fde020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae438bfa530"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae438fde830"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae43900edd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438b86100"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae438b86100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae438b94cf0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ae439008190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae438b9b570"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ae438b9b570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae438ba5020"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae4390070f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ae438b9a6b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae438b9a6b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ae438ba40b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ae439003450"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ae438b96b30"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ae438b96b30"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ae438ba1c00"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ae438c4d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae4387a8320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ae438c8ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae4387a8320"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <documentation loc="43:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ae438b10990"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ae43891b2f0" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ae43891b660" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ae43891b9d0" loc="40:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ae4389309f0" loc="41:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ae438930d80" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ae43892d170" loc="43:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ae43892d4c0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ae4389c1aa0" loc="42:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ae4389c1e30" loc="43:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ae4389be200" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ae4389be550" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ae438b10990" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ae438b10990"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ae438b10ca0" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ae438b1a580" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ae438b1a580"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ae438b1a890" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438c0c160" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438c0c160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438c49230" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438c49230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ae438c49560" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438c8cde0" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438c8cde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ae4388b3d90" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ae4388b3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388b2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ae4388b1870" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ae4388b1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ae4388b1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ae4388bcd50" loc="52:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ae4388bcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388bb100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae4388b2de0" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae4388b2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388bd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ae4388bc020" loc="50:/opt/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae4388bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ae4388bc3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ae4388bc530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ae4388bc6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ae4388bc850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ae4388bc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ae4388c17a0" loc="45:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ae4388c17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388c1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae4388c10c0" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae4388c10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388c1440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ae4388c0020" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ae4388c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ae4388ca110" loc="41:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ae4388ca110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388ca490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ae4388c49e0" loc="40:/opt/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ae4388c49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388c4d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ae4388c5cd0" loc="45:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ae4388c5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388d20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ae4388cead0" loc="44:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ae4388cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388cee50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388c5020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388c51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388c5340"/>
        <function-ref name="get" scoped="" ref="0x2ae4388c54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388c5660"/>
        <function-ref name="set" scoped="" ref="0x2ae4388c57f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388c5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ae4388c7530" loc="43:/opt/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ae4388c7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388c78b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ae438917cb0" loc="100:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ae438917cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438916610"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389167a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438916930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438916ac0"/>
        <function-ref name="get" scoped="" ref="0x2ae438916c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438916de0"/>
        <function-ref name="set" scoped="" ref="0x2ae438915020"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ae4388f34e0" loc="74:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ae4388f34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f3860"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f39f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f3b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f3d10"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f21b0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f2340"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ae438907350" loc="85:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ae438907350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389076d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438907860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389079f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438907b80"/>
        <function-ref name="get" scoped="" ref="0x2ae438907d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438906020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389061b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438906340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ae43890dcb0" loc="94:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ae43890dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43890c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43890c230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43890c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43890c550"/>
        <function-ref name="get" scoped="" ref="0x2ae43890c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43890c870"/>
        <function-ref name="set" scoped="" ref="0x2ae43890ca00"/>
        <function-ref name="clr" scoped="" ref="0x2ae43890cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ae4388dc670" loc="52:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ae4388dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388dc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388dcb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388dcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388db020"/>
        <function-ref name="get" scoped="" ref="0x2ae4388db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388db340"/>
        <function-ref name="set" scoped="" ref="0x2ae4388db4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ae438910670" loc="92:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ae438910670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389109f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438910b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438910d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43890e020"/>
        <function-ref name="get" scoped="" ref="0x2ae43890e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43890e340"/>
        <function-ref name="set" scoped="" ref="0x2ae43890e4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43890e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ae4388dacb0" loc="55:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ae4388dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e8230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e8550"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e8870"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e8a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ae4388edcb0" loc="66:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ae4388edcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388eb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388eb230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388eb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388eb550"/>
        <function-ref name="get" scoped="" ref="0x2ae4388eb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388eb870"/>
        <function-ref name="set" scoped="" ref="0x2ae4388eba00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388ebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ae438900e40" loc="77:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ae438900e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388ff1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388ff370"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388ff500"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388ff690"/>
        <function-ref name="get" scoped="" ref="0x2ae4388ff820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388ff9b0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388ffb40"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388ffcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ae438904cb0" loc="88:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ae438904cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389030a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438903230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438903550"/>
        <function-ref name="get" scoped="" ref="0x2ae4389036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438903870"/>
        <function-ref name="set" scoped="" ref="0x2ae438903a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438903b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ae4388d4800" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ae4388d4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388d4b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388d4d10"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388d31b0"/>
        <function-ref name="get" scoped="" ref="0x2ae4388d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388d34d0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388d3660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ae4388e5670" loc="58:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ae4388e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e59f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e5b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e4020"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e4340"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e44d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ae4388f8670" loc="69:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ae4388f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f89f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f8b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f7020"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f7340"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f74d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ae4388fc670" loc="80:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ae4388fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388fc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388fcb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388fcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388fb020"/>
        <function-ref name="get" scoped="" ref="0x2ae4388fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388fb340"/>
        <function-ref name="set" scoped="" ref="0x2ae4388fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ae438909670" loc="97:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ae438909670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389099f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438909b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438909d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438918020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438918340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389184d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438918660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ae438913b20" loc="103:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ae438913b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438912020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389121b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438912340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389124d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438912660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389127f0"/>
        <function-ref name="set" scoped="" ref="0x2ae438912980"/>
        <function-ref name="clr" scoped="" ref="0x2ae438912b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ae4388facb0" loc="83:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ae4388facb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f9230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f9550"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f9870"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f9a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ae4388de060" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ae4388de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388de3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388de570"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388de700"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388de890"/>
        <function-ref name="get" scoped="" ref="0x2ae4388dea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388debb0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388ded40"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ae4388e1020" loc="61:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ae4388e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e1530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e1850"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e1b70"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e1d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ae4389154e0" loc="101:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ae4389154e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438915860"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389159f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438915b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438915d10"/>
        <function-ref name="get" scoped="" ref="0x2ae438914020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389141b0"/>
        <function-ref name="set" scoped="" ref="0x2ae438914340"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ae4388ef670" loc="64:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ae4388ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388ef9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388efb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388efd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388ee020"/>
        <function-ref name="get" scoped="" ref="0x2ae4388ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388ee340"/>
        <function-ref name="set" scoped="" ref="0x2ae4388ee4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ae4388f2800" loc="75:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ae4388f2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f2b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f2d10"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f11b0"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f14d0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f1660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ae438906670" loc="86:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ae438906670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389069f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438906b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438906d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438905020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438905340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389054d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438905660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ae43890b020" loc="95:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ae43890b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43890b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43890b530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43890b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43890b850"/>
        <function-ref name="get" scoped="" ref="0x2ae43890b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43890bb70"/>
        <function-ref name="set" scoped="" ref="0x2ae43890bd00"/>
        <function-ref name="clr" scoped="" ref="0x2ae43890a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ae4388db990" loc="53:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ae4388db990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388dbd10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388da020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388da340"/>
        <function-ref name="get" scoped="" ref="0x2ae4388da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388da660"/>
        <function-ref name="set" scoped="" ref="0x2ae4388da7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388da980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ae4388e7020" loc="56:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ae4388e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e7530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e7850"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e7b70"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e7d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ae4388ea020" loc="67:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ae4388ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388ea530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388ea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388ea850"/>
        <function-ref name="get" scoped="" ref="0x2ae4388ea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388eab70"/>
        <function-ref name="set" scoped="" ref="0x2ae4388ead00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ae4388fe060" loc="78:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ae4388fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388fe3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388fe570"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388fe700"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388fe890"/>
        <function-ref name="get" scoped="" ref="0x2ae4388fea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388febb0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388fed40"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ae438902020" loc="89:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ae438902020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389023a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438902530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438902850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438902b70"/>
        <function-ref name="set" scoped="" ref="0x2ae438902d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438901020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ae4388d3b20" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ae4388d3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e0020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e04d0"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e07f0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e0980"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ae4388e4990" loc="59:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ae4388e4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e4e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e3020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e3340"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e3660"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e37f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ae4388f7990" loc="70:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ae4388f7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f7d10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f6020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f6340"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f6660"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f67f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ae438918990" loc="98:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ae438918990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438918d10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438917020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438917340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438917660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389177f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438917980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ae4388f4020" loc="73:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ae4388f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f45a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f4730"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f48c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f4a50"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f4be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f4d70"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f3020"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ae438908020" loc="84:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ae438908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389083a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438908530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438908850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438908b70"/>
        <function-ref name="set" scoped="" ref="0x2ae438908d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438907020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ae43890e990" loc="93:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ae43890e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43890ed10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43890d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43890d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43890d340"/>
        <function-ref name="get" scoped="" ref="0x2ae43890d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43890d660"/>
        <function-ref name="set" scoped="" ref="0x2ae43890d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43890d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ae438912e40" loc="104:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ae438912e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389111e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438911370"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438911500"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438911690"/>
        <function-ref name="get" scoped="" ref="0x2ae438911820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389119b0"/>
        <function-ref name="set" scoped="" ref="0x2ae438911b40"/>
        <function-ref name="clr" scoped="" ref="0x2ae438911cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ae4388dd350" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ae4388dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388dd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388dd860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388dd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388ddb80"/>
        <function-ref name="get" scoped="" ref="0x2ae4388ddd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388dc020"/>
        <function-ref name="set" scoped="" ref="0x2ae4388dc1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ae4388f0350" loc="62:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ae4388f0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f06d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f0860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f0b80"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388ef020"/>
        <function-ref name="set" scoped="" ref="0x2ae4388ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ae438901350" loc="91:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ae438901350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389016d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438901860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389019f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438901b80"/>
        <function-ref name="get" scoped="" ref="0x2ae438901d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438910020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389101b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438910340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ae4388ee990" loc="65:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ae4388ee990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388eed10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388ed020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388ed340"/>
        <function-ref name="get" scoped="" ref="0x2ae4388ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388ed660"/>
        <function-ref name="set" scoped="" ref="0x2ae4388ed7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388ed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ae4388f1b20" loc="76:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ae4388f1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438900020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389001b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438900340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389004d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438900660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389007f0"/>
        <function-ref name="set" scoped="" ref="0x2ae438900980"/>
        <function-ref name="clr" scoped="" ref="0x2ae438900b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ae438905990" loc="87:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ae438905990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438905d10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438904020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438904340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438904660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389047f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438904980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ae43890a350" loc="96:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ae43890a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43890a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43890a860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43890a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43890ab80"/>
        <function-ref name="get" scoped="" ref="0x2ae43890ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438909020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389091b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438909340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ae4388c8580" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ae4388c8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388c8900"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388c8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388c8c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388c8db0"/>
        <function-ref name="get" scoped="" ref="0x2ae4388d4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388d41b0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388d4340"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ae4388e6350" loc="57:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ae4388e6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e66d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e6860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e6b80"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e5020"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e51b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ae4388e9350" loc="68:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ae4388e9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e96d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e9860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e9b80"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f8020"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f81b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ae4388fd350" loc="79:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ae4388fd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388fd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388fd860"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388fd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388fdb80"/>
        <function-ref name="get" scoped="" ref="0x2ae4388fdd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388fc020"/>
        <function-ref name="set" scoped="" ref="0x2ae4388fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ae438914800" loc="102:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ae438914800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438914b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438914d10"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438913020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389131b0"/>
        <function-ref name="get" scoped="" ref="0x2ae438913340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389134d0"/>
        <function-ref name="set" scoped="" ref="0x2ae438913660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ae4388fb990" loc="82:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ae4388fb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388fbd10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388fa020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388fa340"/>
        <function-ref name="get" scoped="" ref="0x2ae4388fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388fa660"/>
        <function-ref name="set" scoped="" ref="0x2ae4388fa7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ae4388f6cb0" loc="71:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ae4388f6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388f50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388f5230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388f53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388f5550"/>
        <function-ref name="get" scoped="" ref="0x2ae4388f56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388f5870"/>
        <function-ref name="set" scoped="" ref="0x2ae4388f5a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388f5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ae4388e0e40" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ae4388e0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388df1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388df370"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388df500"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388df690"/>
        <function-ref name="get" scoped="" ref="0x2ae4388df820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388df9b0"/>
        <function-ref name="set" scoped="" ref="0x2ae4388dfb40"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388dfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ae4388e3cb0" loc="60:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ae4388e3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4388e20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4388e2230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4388e23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4388e2550"/>
        <function-ref name="get" scoped="" ref="0x2ae4388e26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4388e2870"/>
        <function-ref name="set" scoped="" ref="0x2ae4388e2a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4388e2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae438966a80" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae438966a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438966e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438965020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438965340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438965660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389657f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438965980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae438962020" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae438962020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389623a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438962530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389626c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438962850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389629e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438962b70"/>
        <function-ref name="set" scoped="" ref="0x2ae438962d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438961020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae4389686b0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae4389686b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438968a30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438968bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438968d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438967020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438967340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389674d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438967660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae438965c10" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae438965c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438964020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389641b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438964340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389644d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438964660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389647f0"/>
        <function-ref name="set" scoped="" ref="0x2ae438964980"/>
        <function-ref name="clr" scoped="" ref="0x2ae438964b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae4389612b0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae4389612b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438961630"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389617c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438961950"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438961ae0"/>
        <function-ref name="get" scoped="" ref="0x2ae438961c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438961e00"/>
        <function-ref name="set" scoped="" ref="0x2ae438972020"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae4389678f0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae4389678f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438967c70"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438967e00"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438966020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389661b0"/>
        <function-ref name="get" scoped="" ref="0x2ae438966340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389664d0"/>
        <function-ref name="set" scoped="" ref="0x2ae438966660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae438964da0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae438964da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438963180"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438963310"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389634a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438963630"/>
        <function-ref name="get" scoped="" ref="0x2ae4389637c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438963950"/>
        <function-ref name="set" scoped="" ref="0x2ae438963ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438963c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae438972440" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae438972440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389727c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438972950"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438972ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438972c70"/>
        <function-ref name="get" scoped="" ref="0x2ae438972e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438971020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389711b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438971340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438cf39b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438cf39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438cf3d30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438cf2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438cf21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438cf2340"/>
        <function-ref name="get" scoped="" ref="0x2ae438cf24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438cf2660"/>
        <function-ref name="set" scoped="" ref="0x2ae438cf27f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438cf2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438cf0e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438cf0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438cef1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438cef350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438cef4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438cef670"/>
        <function-ref name="get" scoped="" ref="0x2ae438cef800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438cef990"/>
        <function-ref name="set" scoped="" ref="0x2ae438cefb20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438cefcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438cec0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438cec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438cec420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438cec5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438cec740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438cec8d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438ceca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438cecbf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438cecd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d093f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d09770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d09900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d09a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d09c20"/>
        <function-ref name="get" scoped="" ref="0x2ae438d09db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d08020"/>
        <function-ref name="set" scoped="" ref="0x2ae438d081b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d08340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d066d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d06a50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d06be0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d06d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d04020"/>
        <function-ref name="get" scoped="" ref="0x2ae438d041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d04340"/>
        <function-ref name="set" scoped="" ref="0x2ae438d044d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d029b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d029b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d02d30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d01020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d01340"/>
        <function-ref name="get" scoped="" ref="0x2ae438d014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d01660"/>
        <function-ref name="set" scoped="" ref="0x2ae438d017f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d01980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438cffe20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438cffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438cfe1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438cfe350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438cfe4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438cfe670"/>
        <function-ref name="get" scoped="" ref="0x2ae438cfe800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438cfe990"/>
        <function-ref name="set" scoped="" ref="0x2ae438cfeb20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438cfecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d1b0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d1b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d1b420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d1b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d1b740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d1b8d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438d1ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d1bbf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438d1bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae43897bda0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae43897bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43897a180"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43897a310"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43897a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43897a630"/>
        <function-ref name="get" scoped="" ref="0x2ae43897a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43897a950"/>
        <function-ref name="set" scoped="" ref="0x2ae43897aae0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43897ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae438977440" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae438977440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389777c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438977950"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438977ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438977c70"/>
        <function-ref name="get" scoped="" ref="0x2ae438977e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438975020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389751b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438975340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae43896ba20" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae43896ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43896bda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43896a020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43896a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43896a340"/>
        <function-ref name="get" scoped="" ref="0x2ae43896a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43896a660"/>
        <function-ref name="set" scoped="" ref="0x2ae43896a7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43896a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae438979020" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae438979020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389793a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438979530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438979850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438979b70"/>
        <function-ref name="set" scoped="" ref="0x2ae438979d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438978020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae4389755d0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae4389755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438975950"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438975ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438975c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438975e00"/>
        <function-ref name="get" scoped="" ref="0x2ae438974020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389741b0"/>
        <function-ref name="set" scoped="" ref="0x2ae438974340"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae43896ac10" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae43896ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43897b020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43897b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43897b340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43897b4d0"/>
        <function-ref name="get" scoped="" ref="0x2ae43897b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43897b7f0"/>
        <function-ref name="set" scoped="" ref="0x2ae43897b980"/>
        <function-ref name="clr" scoped="" ref="0x2ae43897bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae4389782b0" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae4389782b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438978630"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389787c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438978950"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438978ae0"/>
        <function-ref name="get" scoped="" ref="0x2ae438978c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438978e00"/>
        <function-ref name="set" scoped="" ref="0x2ae438977020"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae438974760" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae438974760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438974ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438974c70"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438974e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438973020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438973340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389734d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438973660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d68c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d68c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d670a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d67230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d673c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d67550"/>
        <function-ref name="get" scoped="" ref="0x2ae438d676e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d67870"/>
        <function-ref name="set" scoped="" ref="0x2ae438d67a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d67b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d65e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d65e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d641c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d64350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d644e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d64670"/>
        <function-ref name="get" scoped="" ref="0x2ae438d64800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d64990"/>
        <function-ref name="set" scoped="" ref="0x2ae438d64b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d64cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d610a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d61420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d615b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d61740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d618d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438d61a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d61bf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438d61d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d5e3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d5e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d5e770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d5e900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d5ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d5ec20"/>
        <function-ref name="get" scoped="" ref="0x2ae438d5edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d5d020"/>
        <function-ref name="set" scoped="" ref="0x2ae438d5d1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d7c6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d7c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d7ca50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d7cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d7cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d7b020"/>
        <function-ref name="get" scoped="" ref="0x2ae438d7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d7b340"/>
        <function-ref name="set" scoped="" ref="0x2ae438d7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d799b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d799b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d79d30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d77020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d77340"/>
        <function-ref name="get" scoped="" ref="0x2ae438d774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d77660"/>
        <function-ref name="set" scoped="" ref="0x2ae438d777f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d75e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d75e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d741c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d74350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d744e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d74670"/>
        <function-ref name="get" scoped="" ref="0x2ae438d74800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d74990"/>
        <function-ref name="set" scoped="" ref="0x2ae438d74b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d74cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438d710a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438d710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438d71420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438d715b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438d71740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438d718d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438d71a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438d71bf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438d71d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438d70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae43897d020" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae43897d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43897d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43897d530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43897d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43897d850"/>
        <function-ref name="get" scoped="" ref="0x2ae43897d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43897db70"/>
        <function-ref name="set" scoped="" ref="0x2ae43897dd00"/>
        <function-ref name="clr" scoped="" ref="0x2ae43898d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae43898b5d0" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae43898b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43898b950"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43898bae0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43898bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43898be00"/>
        <function-ref name="get" scoped="" ref="0x2ae43898a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43898a1b0"/>
        <function-ref name="set" scoped="" ref="0x2ae43898a340"/>
        <function-ref name="clr" scoped="" ref="0x2ae43898a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae438980d30" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae438980d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43897f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43897f270"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43897f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43897f590"/>
        <function-ref name="get" scoped="" ref="0x2ae43897f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43897f8b0"/>
        <function-ref name="set" scoped="" ref="0x2ae43897fa40"/>
        <function-ref name="clr" scoped="" ref="0x2ae43897fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae43898d2b0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae43898d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43898d630"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43898d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43898d950"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43898dae0"/>
        <function-ref name="get" scoped="" ref="0x2ae43898dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43898de00"/>
        <function-ref name="set" scoped="" ref="0x2ae43898c020"/>
        <function-ref name="clr" scoped="" ref="0x2ae43898c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae43898a760" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae43898a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43898aae0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43898ac70"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43898ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438989020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438989340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389894d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438989660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae43897fe60" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae43897fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43897e210"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43897e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43897e530"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43897e6c0"/>
        <function-ref name="get" scoped="" ref="0x2ae43897e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43897e9e0"/>
        <function-ref name="set" scoped="" ref="0x2ae43897eb70"/>
        <function-ref name="clr" scoped="" ref="0x2ae43897ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae43898c440" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae43898c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43898c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43898c950"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43898cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43898cc70"/>
        <function-ref name="get" scoped="" ref="0x2ae43898ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43898b020"/>
        <function-ref name="set" scoped="" ref="0x2ae43898b1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43898b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae4389898f0" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae4389898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438989c70"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438989e00"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438988020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389881b0"/>
        <function-ref name="get" scoped="" ref="0x2ae438988340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389884d0"/>
        <function-ref name="set" scoped="" ref="0x2ae438988660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438dc8c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438dc8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438dc70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dc7230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dc73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438dc7550"/>
        <function-ref name="get" scoped="" ref="0x2ae438dc76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438dc7870"/>
        <function-ref name="set" scoped="" ref="0x2ae438dc7a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438dc7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438dc5e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438dc5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438dc41c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dc4350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dc44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438dc4670"/>
        <function-ref name="get" scoped="" ref="0x2ae438dc4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438dc4990"/>
        <function-ref name="set" scoped="" ref="0x2ae438dc4b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438dc4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438dc10a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438dc10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438dc1420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dc15b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dc1740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438dc18d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438dc1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438dc1bf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438dc1d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438de2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438de03f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438de03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438de0770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438de0900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438de0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438de0c20"/>
        <function-ref name="get" scoped="" ref="0x2ae438de0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ddf020"/>
        <function-ref name="set" scoped="" ref="0x2ae438ddf1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ddf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438ddd6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438ddd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ddda50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dddbe0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ddc020"/>
        <function-ref name="get" scoped="" ref="0x2ae438ddc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ddc340"/>
        <function-ref name="set" scoped="" ref="0x2ae438ddc4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ddc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438dda9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438dda9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ddad30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dd8020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dd81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438dd8340"/>
        <function-ref name="get" scoped="" ref="0x2ae438dd84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438dd8660"/>
        <function-ref name="set" scoped="" ref="0x2ae438dd87f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438dd8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438dd6e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438dd6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438dd51c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dd5350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dd54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438dd5670"/>
        <function-ref name="get" scoped="" ref="0x2ae438dd5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438dd5990"/>
        <function-ref name="set" scoped="" ref="0x2ae438dd5b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438dd5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438dd20a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438dd20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438dd2420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438dd25b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438dd2740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438dd28d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438dd2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438dd2bf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438dd2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438df4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae438991440" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae438991440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389917c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438991950"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438991ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438991c70"/>
        <function-ref name="get" scoped="" ref="0x2ae438991e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438990020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389901b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438990340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae43898e8f0" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae43898e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43898ec70"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43898ee00"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43899f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43899f1b0"/>
        <function-ref name="get" scoped="" ref="0x2ae43899f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43899f4d0"/>
        <function-ref name="set" scoped="" ref="0x2ae43899f660"/>
        <function-ref name="clr" scoped="" ref="0x2ae43899f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae438993020" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae438993020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389933a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438993530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389936c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438993850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389939e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438993b70"/>
        <function-ref name="set" scoped="" ref="0x2ae438993d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae4389905d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae4389905d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438990950"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438990ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438990c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438990e00"/>
        <function-ref name="get" scoped="" ref="0x2ae43898f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43898f1b0"/>
        <function-ref name="set" scoped="" ref="0x2ae43898f340"/>
        <function-ref name="clr" scoped="" ref="0x2ae43898f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae43899fa80" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae43899fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43899fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43899e020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43899e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43899e340"/>
        <function-ref name="get" scoped="" ref="0x2ae43899e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43899e660"/>
        <function-ref name="set" scoped="" ref="0x2ae43899e7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43899e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae4389922b0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae4389922b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438992630"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389927c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438992950"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438992ae0"/>
        <function-ref name="get" scoped="" ref="0x2ae438992c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438992e00"/>
        <function-ref name="set" scoped="" ref="0x2ae438991020"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae43898f760" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae43898f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43898fae0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43898fc70"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43898fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43898e020"/>
        <function-ref name="get" scoped="" ref="0x2ae43898e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43898e340"/>
        <function-ref name="set" scoped="" ref="0x2ae43898e4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae43898e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae43899ec10" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae43899ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae43899d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae43899d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae43899d340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae43899d4d0"/>
        <function-ref name="get" scoped="" ref="0x2ae43899d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae43899d7f0"/>
        <function-ref name="set" scoped="" ref="0x2ae43899d980"/>
        <function-ref name="clr" scoped="" ref="0x2ae43899db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e32c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e32c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e310a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e31230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e313c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e31550"/>
        <function-ref name="get" scoped="" ref="0x2ae438e316e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e31870"/>
        <function-ref name="set" scoped="" ref="0x2ae438e31a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e31b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e2fe20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e2fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e2e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e2e350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e2e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e2e670"/>
        <function-ref name="get" scoped="" ref="0x2ae438e2e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e2e990"/>
        <function-ref name="set" scoped="" ref="0x2ae438e2eb20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e2ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e2b0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e2b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e2b420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e2b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e2b740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e2b8d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438e2ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e2bbf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438e2bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e4c3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e4c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e4c770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e4c900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e4ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e4cc20"/>
        <function-ref name="get" scoped="" ref="0x2ae438e4cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e4b020"/>
        <function-ref name="set" scoped="" ref="0x2ae438e4b1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e4b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e496d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e49a50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e49be0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e49d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e48020"/>
        <function-ref name="get" scoped="" ref="0x2ae438e481b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e48340"/>
        <function-ref name="set" scoped="" ref="0x2ae438e484d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e48660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e469b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e469b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e46d30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e45020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e45340"/>
        <function-ref name="get" scoped="" ref="0x2ae438e454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e45660"/>
        <function-ref name="set" scoped="" ref="0x2ae438e457f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e45980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e43e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e43e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e411c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e41350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e414e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e41670"/>
        <function-ref name="get" scoped="" ref="0x2ae438e41800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e41990"/>
        <function-ref name="set" scoped="" ref="0x2ae438e41b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e41cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e3e0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e3e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e3e420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e3e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e3e740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e3e8d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438e3ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e3ebf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438e3ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae4389a6760" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae4389a6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a6ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a6c70"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a6e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a5020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a5340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a54d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae4389a3c10" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae4389a3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a2020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a21b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a2340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a24d0"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a27f0"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a2980"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae4389a83f0" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae4389a83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a8770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a8900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a8c20"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a7020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a71b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae4389a58f0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae4389a58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a5c70"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a5e00"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a41b0"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a44d0"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a4660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae4389a2da0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae4389a2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a1180"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a1310"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a1630"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a1950"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a1ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae4389a75d0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae4389a75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a7950"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a7ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a7c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a7e00"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a61b0"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a6340"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae4389a4a80" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae4389a4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a4e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a3020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a3340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a3660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a37f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae4389a0020" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae4389a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a0530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389a0850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a0b70"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a0d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438ea6c90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438ea6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ea50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ea5230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ea53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ea5550"/>
        <function-ref name="get" scoped="" ref="0x2ae438ea56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ea5870"/>
        <function-ref name="set" scoped="" ref="0x2ae438ea5a00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ea5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438ea3e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438ea3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ea21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ea2350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ea24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ea2670"/>
        <function-ref name="get" scoped="" ref="0x2ae438ea2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ea2990"/>
        <function-ref name="set" scoped="" ref="0x2ae438ea2b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ea2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e9f0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e9f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e9f420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e9f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e9f740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e9f8d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438e9fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e9fbf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438e9fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438e9c3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438e9c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438e9c770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438e9c900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438e9ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438e9cc20"/>
        <function-ref name="get" scoped="" ref="0x2ae438e9cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438e9b020"/>
        <function-ref name="set" scoped="" ref="0x2ae438e9b1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438e9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438ebf6d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438ebf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ebfa50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ebfbe0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ebfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ebe020"/>
        <function-ref name="get" scoped="" ref="0x2ae438ebe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ebe340"/>
        <function-ref name="set" scoped="" ref="0x2ae438ebe4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ebe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438ebc9b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438ebc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ebcd30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ebb020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ebb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ebb340"/>
        <function-ref name="get" scoped="" ref="0x2ae438ebb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ebb660"/>
        <function-ref name="set" scoped="" ref="0x2ae438ebb7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ebb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438eb9e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438eb9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438eb71c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438eb7350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438eb74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438eb7670"/>
        <function-ref name="get" scoped="" ref="0x2ae438eb7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438eb7990"/>
        <function-ref name="set" scoped="" ref="0x2ae438eb7b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438eb7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438eb40a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438eb40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438eb4420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438eb45b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438eb4740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438eb48d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438eb4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438eb4bf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438eb4d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438eb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae4389a9760" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae4389a9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389a9ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389a9c70"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389a9e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389ba020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389ba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389ba340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389ba4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae4389b8c10" loc="49:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae4389b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389b6020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389b61b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389b6340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389b64d0"/>
        <function-ref name="get" scoped="" ref="0x2ae4389b6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389b67f0"/>
        <function-ref name="set" scoped="" ref="0x2ae4389b6980"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389b6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae4389ab460" loc="44:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae4389ab460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389ab7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389ab970"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389abb00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389abc90"/>
        <function-ref name="get" scoped="" ref="0x2ae4389abe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389aa020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae4389ba8f0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae4389ba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389bac70"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389bae00"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389b91b0"/>
        <function-ref name="get" scoped="" ref="0x2ae4389b9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389b94d0"/>
        <function-ref name="set" scoped="" ref="0x2ae4389b9660"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae4389b6da0" loc="50:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae4389b6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389b5180"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389b5310"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389b54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389b5630"/>
        <function-ref name="get" scoped="" ref="0x2ae4389b57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389b5950"/>
        <function-ref name="set" scoped="" ref="0x2ae4389b5ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389b5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae4389aa5d0" loc="45:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae4389aa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389aa950"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389aaae0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389aac70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389aae00"/>
        <function-ref name="get" scoped="" ref="0x2ae4389a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389a91b0"/>
        <function-ref name="set" scoped="" ref="0x2ae4389a9340"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae4389b9a80" loc="48:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae4389b9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389b9e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389b8020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389b81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389b8340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389b84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389b8660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389b87f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae4389b4020" loc="51:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae4389b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389b4530"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389b46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389b4850"/>
        <function-ref name="get" scoped="" ref="0x2ae4389b49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389b4b70"/>
        <function-ref name="set" scoped="" ref="0x2ae4389b4d00"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438efcc90" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438efcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438efb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438efb230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438efb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438efb550"/>
        <function-ref name="get" scoped="" ref="0x2ae438efb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438efb870"/>
        <function-ref name="set" scoped="" ref="0x2ae438efba00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438efbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f21e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f21e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f201c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f20350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f204e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f20670"/>
        <function-ref name="get" scoped="" ref="0x2ae438f20800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f20990"/>
        <function-ref name="set" scoped="" ref="0x2ae438f20b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f20cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f1d0a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f1d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f1d420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f1d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f1d740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f1d8d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438f1da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f1dbf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438f1dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f1a3f0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f1a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f1a770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f1a900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f1aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f1ac20"/>
        <function-ref name="get" scoped="" ref="0x2ae438f1adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f19020"/>
        <function-ref name="set" scoped="" ref="0x2ae438f191b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f176d0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f176d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f17a50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f17be0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f17d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f16020"/>
        <function-ref name="get" scoped="" ref="0x2ae438f161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f16340"/>
        <function-ref name="set" scoped="" ref="0x2ae438f164d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f149b0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f149b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f14d30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f13020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f13340"/>
        <function-ref name="get" scoped="" ref="0x2ae438f134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f13660"/>
        <function-ref name="set" scoped="" ref="0x2ae438f137f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f11e20" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f11e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f101c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f10350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f104e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f10670"/>
        <function-ref name="get" scoped="" ref="0x2ae438f10800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f10990"/>
        <function-ref name="set" scoped="" ref="0x2ae438f10b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f10cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438f350a0" loc="46:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438f350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438f35420"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438f355b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438f35740"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438f358d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438f35a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438f35bf0"/>
        <function-ref name="set" scoped="" ref="0x2ae438f35d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae438f33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389bf460" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389bf460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389bf7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389bf970"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389bfb00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389bfc90"/>
        <function-ref name="get" scoped="" ref="0x2ae4389bfe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389de020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389de1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389daa80" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389daa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389dae00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389d9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389d91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389d9340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389d9660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389d97f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389d9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389e83f0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389e83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389e8770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389e8900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389e8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389e8c20"/>
        <function-ref name="get" scoped="" ref="0x2ae4389e8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389e7020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389e71b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389e3a80" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389e3e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389e2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389e2340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389e2660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389e27f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389f13f0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389f13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389f1770"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389f1900"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389f1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389f1c20"/>
        <function-ref name="get" scoped="" ref="0x2ae4389f1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389f0020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389f01b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389eda80" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389eda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389ede00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389ec020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389ec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389ec340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389ec660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389ec7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389fb460" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389fb460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389fb7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389fb970"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389fbb00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389fbc90"/>
        <function-ref name="get" scoped="" ref="0x2ae4389fbe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389fa020"/>
        <function-ref name="set" scoped="" ref="0x2ae4389fa1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae4389f6a80" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae4389f6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae4389f6e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae4389f5020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae4389f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389f5340"/>
        <function-ref name="get" scoped="" ref="0x2ae4389f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389f5660"/>
        <function-ref name="set" scoped="" ref="0x2ae4389f57f0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438a05120" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438a05120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438a054a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438a05630"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438a057c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438a05950"/>
        <function-ref name="get" scoped="" ref="0x2ae438a05ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438a05c70"/>
        <function-ref name="set" scoped="" ref="0x2ae438a05e00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438a04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438a006d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438a006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438a00a50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438a00be0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438a00d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae4389ff020"/>
        <function-ref name="get" scoped="" ref="0x2ae4389ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae4389ff340"/>
        <function-ref name="set" scoped="" ref="0x2ae4389ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae4389ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438a10c90" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438a10c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438a0e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438a0e230"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438a0e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438a0e550"/>
        <function-ref name="get" scoped="" ref="0x2ae438a0e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438a0e870"/>
        <function-ref name="set" scoped="" ref="0x2ae438a0ea00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438a0eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438a0a120" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438a0a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438a0a4a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438a0a630"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438a0a7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438a0a950"/>
        <function-ref name="get" scoped="" ref="0x2ae438a0aae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438a0ac70"/>
        <function-ref name="set" scoped="" ref="0x2ae438a0ae00"/>
        <function-ref name="clr" scoped="" ref="0x2ae438a09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae438a196d0" loc="47:/opt/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae438a196d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438a19a50"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438a19be0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438a19d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438a18020"/>
        <function-ref name="get" scoped="" ref="0x2ae438a181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438a18340"/>
        <function-ref name="set" scoped="" ref="0x2ae438a184d0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438a18660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae438a54910" loc="27:/opt/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438a54910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ae4387a9d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ae4387a9d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438a54c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ae438a53020" loc="28:/opt/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae438a53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ae438a533a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ae438a53530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ae438a536c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ae438a53850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ae438a539e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ae438a71210" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ae438a71210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438a71590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ae4388aea00" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ae4388aea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ae4388aed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ae438a72ae0" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ae438a72ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438a72e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ae438a720c0" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ae438a720c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438a72440"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ae438a725d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ae438a72760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ae4387a8320" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ae4387a8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae4387a86a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ae4387a8830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ae4387b0460" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ae4387b0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4387b07e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ae4387b0970"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ae4387b0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ae4388711d0" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ae4388711d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae438871550"/>
        <function-ref name="runTask" scoped="" ref="0x2ae4388716e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ae43887c740" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ae43887c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ae43887cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ae438873230" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ae438873230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae4388735b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ae438873740"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ae4388738d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ae438895690" loc="54:/opt/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae438895690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ae438895a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ae43887f250" loc="50:/opt/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ae43887f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ae43887f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ae438897740" loc="51:/opt/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ae438897740"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ae438897ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2ae438a87e20" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2ae438a87e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438a84390"/>
        <function-ref name="fired" scoped="" ref="0x2ae438a7a970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438a86720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438a862a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438a84c90"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438a84810"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438a7adf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438a7ba80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438a86d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438a7a020"/>
        <function-ref name="stop" scoped="" ref="0x2ae438a7a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ae438a8d020" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ae438a8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ae438a8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2ae438a83340" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2ae438a83340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438a95870"/>
        <function-ref name="fired" scoped="" ref="0x2ae438a82e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438a97c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438a97780"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438a941e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438a95cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438a97300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438a82020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438a95260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438a824f0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438a829c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae438a998d0" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae438a998d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae438a99c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae438a99de0"/>
        <function-ref name="led1On" scoped="" ref="0x2ae438a8e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae438a8e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae438a8e340"/>
        <function-ref name="get" scoped="" ref="0x2ae438a8e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae438a8e660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae438a8eca0"/>
        <function-ref name="set" scoped="" ref="0x2ae438a8e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2ae438a8e980"/>
        <function-ref name="led2On" scoped="" ref="0x2ae438a8eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2ae438a94830" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2ae438a94830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438a90cf0"/>
        <function-ref name="fired" scoped="" ref="0x2ae438a92300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438a900d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438a92c00"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438a8f660"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438a8f1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438a92780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438a93480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438a906e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438a93950"/>
        <function-ref name="stop" scoped="" ref="0x2ae438a93e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ae438aa5080" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae438aa5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae438aa5400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae438aa5590"/>
        <function-ref name="led1On" scoped="" ref="0x2ae438aa5720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae438aa58b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae438aa5a40"/>
        <function-ref name="get" scoped="" ref="0x2ae438aa5bd0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae438aa5d60"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae438aa44d0"/>
        <function-ref name="set" scoped="" ref="0x2ae438aa4020"/>
        <function-ref name="led0On" scoped="" ref="0x2ae438aa41b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ae438aa4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ae438ab5210" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ae438ab5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ab5590"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ab5720"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ab58b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ab5a40"/>
        <function-ref name="get" scoped="" ref="0x2ae438ab5bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ab5d60"/>
        <function-ref name="set" scoped="" ref="0x2ae438ab4020"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ab41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae438ab7470" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438ab7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438ab77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ae438ab44d0" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ae438ab44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ab4850"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ab49e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ab4b70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ab4d00"/>
        <function-ref name="get" scoped="" ref="0x2ae438ab3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ab31b0"/>
        <function-ref name="set" scoped="" ref="0x2ae438ab3340"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ab34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ae438ab7a70" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae438ab7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae438ab7df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae438ab6020"/>
        <function-ref name="led1On" scoped="" ref="0x2ae438ab61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae438ab6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae438ab64d0"/>
        <function-ref name="get" scoped="" ref="0x2ae438ab6660"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae438ab67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae438ab6e30"/>
        <function-ref name="set" scoped="" ref="0x2ae438ab6980"/>
        <function-ref name="led0On" scoped="" ref="0x2ae438ab6b10"/>
        <function-ref name="led2On" scoped="" ref="0x2ae438ab6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ae438ab37f0" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ae438ab37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ab3b70"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ab3d00"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ab2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ab21b0"/>
        <function-ref name="get" scoped="" ref="0x2ae438ab2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ab24d0"/>
        <function-ref name="set" scoped="" ref="0x2ae438ab2660"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ab27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ae438ab8e00" loc="44:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ae438ab8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ad81c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ad8350"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ad84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ad8670"/>
        <function-ref name="get" scoped="" ref="0x2ae438ad8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ad8990"/>
        <function-ref name="set" scoped="" ref="0x2ae438ad8b20"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ad8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ae438ad7060" loc="45:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ae438ad7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ad73e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ad7570"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ad7700"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ad7890"/>
        <function-ref name="get" scoped="" ref="0x2ae438ad7a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ad7bb0"/>
        <function-ref name="set" scoped="" ref="0x2ae438ad7d40"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ad6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ae438ad5600" loc="47:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438ad5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438ad5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ae438ad6380" loc="46:/opt/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ae438ad6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae438ad6700"/>
        <function-ref name="isInput" scoped="" ref="0x2ae438ad6890"/>
        <function-ref name="toggle" scoped="" ref="0x2ae438ad6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae438ad6bb0"/>
        <function-ref name="get" scoped="" ref="0x2ae438ad6d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae438ad5020"/>
        <function-ref name="set" scoped="" ref="0x2ae438ad51b0"/>
        <function-ref name="clr" scoped="" ref="0x2ae438ad5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438c97140" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438c97140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438cb1630"/>
        <function-ref name="fired" scoped="" ref="0x2ae438cb4b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438cb2920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438cb24a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438cb0020"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438cb1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438cb2020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438c97d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438cb1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438cb4220"/>
        <function-ref name="stop" scoped="" ref="0x2ae438cb46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ae438ada610" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ada610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438aeec40"/>
        <function-ref name="fired" scoped="" ref="0x2ae438aef1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438aee020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438aefae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438aed590"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438aed110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438aef660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438af0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438aee630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438af0860"/>
        <function-ref name="stop" scoped="" ref="0x2ae438af0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ae438ae8210" loc="46:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ae438ae8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438afc6e0"/>
        <function-ref name="fired" scoped="" ref="0x2ae438ae7c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438ae5a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438ae55f0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438afb020"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438afcb60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438ae5170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438ae8e00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438afc0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438ae7340"/>
        <function-ref name="stop" scoped="" ref="0x2ae438ae7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ae438af7a80" loc="47:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ae438af7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae438af96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae438ae9410" loc="45:/opt/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438ae9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438ae9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ae438b12910" loc="29:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ae438b12910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae438aff780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae438afe150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae438affc40"/>
        <function-ref name="overflow" scoped="" ref="0x2ae438afe610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae438af32c0" loc="27:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438af32c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438af3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ae438af2260" loc="28:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ae438af2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438b01b30"/>
        <function-ref name="fired" scoped="" ref="0x2ae438b02a60"/>
        <function-ref name="startAt" scoped="" ref="0x2ae438b014e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438b01020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae438b00020"/>
        <function-ref name="start" scoped="" ref="0x2ae438b02090"/>
        <function-ref name="stop" scoped="" ref="0x2ae438b025a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae438bfa530" loc="26:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae438bfa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438c14db0"/>
        <function-ref name="fired" scoped="" ref="0x2ae438c15da0"/>
        <function-ref name="startAt" scoped="" ref="0x2ae438c14760"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438c142a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae438c132a0"/>
        <function-ref name="start" scoped="" ref="0x2ae438c153d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438c158e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae438bfbc80" loc="25:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438bfbc80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ae4387a99c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ae4387a99c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438bfa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae438c138d0" loc="27:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae438c138d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae438c11780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae438c10150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae438c11c40"/>
        <function-ref name="overflow" scoped="" ref="0x2ae438c10610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ae439008190" loc="31:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae439008190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae439008510"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae4390086a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae439008830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae4390089c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae439008b50"/>
        <function-ref name="setControl" scoped="" ref="0x2ae439008ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae438fde830" loc="26:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae438fde830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae439011090"/>
        <function-ref name="fired" scoped="" ref="0x2ae438fdc090"/>
        <function-ref name="startAt" scoped="" ref="0x2ae438fdca10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438fdc550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae439011550"/>
        <function-ref name="start" scoped="" ref="0x2ae438fdd6a0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438fddbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae438fde020" loc="25:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae438fde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae438fde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae439011b80" loc="27:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae439011b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae43900f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae43900e360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae43900fe70"/>
        <function-ref name="overflow" scoped="" ref="0x2ae43900e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2ae439003450" loc="33:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ae439003450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ae4390037d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ae439003960"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ae439003af0"/>
        <function-ref name="countBusy" scoped="" ref="0x2ae439003c80"/>
        <function-ref name="getAssr" scoped="" ref="0x2ae439003e10"/>
        <function-ref name="setAssr" scoped="" ref="0x2ae439002020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ae4390070f0" loc="32:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae4390070f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae439004a50"/>
        <function-ref name="fired" scoped="" ref="0x2ae439005730"/>
        <function-ref name="get" scoped="" ref="0x2ae439007d20"/>
        <function-ref name="reset" scoped="" ref="0x2ae439005bf0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae439003020"/>
        <function-ref name="set" scoped="" ref="0x2ae439005220"/>
        <function-ref name="start" scoped="" ref="0x2ae4390040d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae439004590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ae43900edd0" loc="30:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae43900edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae439009350"/>
        <function-ref name="test" scoped="" ref="0x2ae43900a9a0"/>
        <function-ref name="get" scoped="" ref="0x2ae43900dac0"/>
        <function-ref name="setScale" scoped="" ref="0x2ae439009810"/>
        <function-ref name="getScale" scoped="" ref="0x2ae439009d20"/>
        <function-ref name="reset" scoped="" ref="0x2ae43900c9f0"/>
        <function-ref name="overflow" scoped="" ref="0x2ae43900c530"/>
        <function-ref name="isOn" scoped="" ref="0x2ae43900ae60"/>
        <function-ref name="set" scoped="" ref="0x2ae43900c020"/>
        <function-ref name="start" scoped="" ref="0x2ae43900a020"/>
        <function-ref name="stop" scoped="" ref="0x2ae43900a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae438b9b570" loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae438b9b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae438b9b8f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae438b9ba80"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae438b9bc10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae438b9bda0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae438b9a020"/>
        <function-ref name="setControl" scoped="" ref="0x2ae438b9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ae438b96b30" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ae438b96b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ae438b95020"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ae438b951b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ae438b95340"/>
        <function-ref name="countBusy" scoped="" ref="0x2ae438b954d0"/>
        <function-ref name="getAssr" scoped="" ref="0x2ae438b95660"/>
        <function-ref name="setAssr" scoped="" ref="0x2ae438b957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ae438b9a6b0" loc="49:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae438b9a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae438b96110"/>
        <function-ref name="fired" scoped="" ref="0x2ae438b98da0"/>
        <function-ref name="get" scoped="" ref="0x2ae438b983d0"/>
        <function-ref name="reset" scoped="" ref="0x2ae438b972a0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae438b965d0"/>
        <function-ref name="set" scoped="" ref="0x2ae438b98890"/>
        <function-ref name="start" scoped="" ref="0x2ae438b97760"/>
        <function-ref name="stop" scoped="" ref="0x2ae438b97c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438b86100" loc="47:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438b86100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae438b9c4e0"/>
        <function-ref name="test" scoped="" ref="0x2ae438b83a50"/>
        <function-ref name="get" scoped="" ref="0x2ae438b86d30"/>
        <function-ref name="setScale" scoped="" ref="0x2ae438b9c9a0"/>
        <function-ref name="getScale" scoped="" ref="0x2ae438b9b020"/>
        <function-ref name="reset" scoped="" ref="0x2ae438b85bf0"/>
        <function-ref name="overflow" scoped="" ref="0x2ae438b85730"/>
        <function-ref name="isOn" scoped="" ref="0x2ae438b9c020"/>
        <function-ref name="set" scoped="" ref="0x2ae438b85220"/>
        <function-ref name="start" scoped="" ref="0x2ae438b830d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438b83590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae438ba5020" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae438ba5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae438ba53a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae438ba5530"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae438ba56c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae438ba5850"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae438ba59e0"/>
        <function-ref name="setControl" scoped="" ref="0x2ae438ba5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ae438ba14c0" loc="52:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae438ba14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ae438ba1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ae438ba1c00" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ae438ba1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ae438b9f020"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ae438b9f1b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ae438b9f340"/>
        <function-ref name="countBusy" scoped="" ref="0x2ae438b9f4d0"/>
        <function-ref name="getAssr" scoped="" ref="0x2ae438b9f660"/>
        <function-ref name="setAssr" scoped="" ref="0x2ae438b9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ae438ba40b0" loc="51:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae438ba40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae438ba2a50"/>
        <function-ref name="fired" scoped="" ref="0x2ae438ba3730"/>
        <function-ref name="get" scoped="" ref="0x2ae438ba4ce0"/>
        <function-ref name="reset" scoped="" ref="0x2ae438ba3bf0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae438ba1020"/>
        <function-ref name="set" scoped="" ref="0x2ae438ba3220"/>
        <function-ref name="start" scoped="" ref="0x2ae438ba20d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438ba2590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438b94cf0" loc="49:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438b94cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae438ba7090"/>
        <function-ref name="test" scoped="" ref="0x2ae438ba86e0"/>
        <function-ref name="get" scoped="" ref="0x2ae438b90980"/>
        <function-ref name="setScale" scoped="" ref="0x2ae438ba7550"/>
        <function-ref name="getScale" scoped="" ref="0x2ae438ba7a60"/>
        <function-ref name="reset" scoped="" ref="0x2ae438ba9840"/>
        <function-ref name="overflow" scoped="" ref="0x2ae438ba9380"/>
        <function-ref name="isOn" scoped="" ref="0x2ae438ba8ba0"/>
        <function-ref name="set" scoped="" ref="0x2ae438b90e40"/>
        <function-ref name="start" scoped="" ref="0x2ae438ba9d00"/>
        <function-ref name="stop" scoped="" ref="0x2ae438ba8220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ae438c4d020" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ae438c4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae438c4d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ae438c4d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ae438c36cd0" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae438c36cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438c33670"/>
        <function-ref name="fired" scoped="" ref="0x2ae438c34550"/>
        <function-ref name="startAt" scoped="" ref="0x2ae438c33020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438c34a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae438c33b30"/>
        <function-ref name="start" scoped="" ref="0x2ae438c35b60"/>
        <function-ref name="stop" scoped="" ref="0x2ae438c34090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438c3b830" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438c3b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438c38cf0"/>
        <function-ref name="fired" scoped="" ref="0x2ae438c39300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438c380d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438c39c00"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438c36660"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438c361e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438c39780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438c3a480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438c386e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438c3a950"/>
        <function-ref name="stop" scoped="" ref="0x2ae438c3ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ae438c8ea00" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ae438c8ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae438c8ed80"/>
        <function-ref name="runTask" scoped="" ref="0x2ae438c8d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ae438c93640" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ae438c93640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438c90c40"/>
        <function-ref name="fired" scoped="" ref="0x2ae438c911e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438c90020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438c91ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438c8e590"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438c8e110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438c91660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438c92390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438c90630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438c92860"/>
        <function-ref name="stop" scoped="" ref="0x2ae438c92d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438c7b150" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438c7b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438c95700"/>
        <function-ref name="fired" scoped="" ref="0x2ae438c7ac30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438c96a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438c965b0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438c93090"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438c95ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438c96110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438c7bd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438c950d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438c7a2a0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438c7a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ae438c8b790" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ae438c8b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae438c8a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ae438c8aa60" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae438c8aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae438c9e890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae438c9d260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae438c9ed50"/>
        <function-ref name="overflow" scoped="" ref="0x2ae438c9d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438cafb00" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438cafb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438caa110"/>
        <function-ref name="fired" scoped="" ref="0x2ae438cac5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438cab4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438cab020"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438caaa10"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438caa590"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438caca30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438cae750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438cabab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438caec20"/>
        <function-ref name="stop" scoped="" ref="0x2ae438cac130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae438ca8490" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae438ca8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae4388327d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae438832b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae438cc2a20"/>
        <function-ref name="fired" scoped="" ref="0x2ae438cc3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae438cc3da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae438cc3920"/>
        <function-ref name="getdt" scoped="" ref="0x2ae438cc14a0"/>
        <function-ref name="gett0" scoped="" ref="0x2ae438cc1020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae438cc34a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae438ca60d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae438cc2410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae438ca65a0"/>
        <function-ref name="stop" scoped="" ref="0x2ae438ca6a70"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ae4388b38e0" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae4387ac9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ae4388b14a0" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ae4388b8bc0" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae437e2c5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ae4388b8940" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ae4388ba190" loc="31:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae437e2c5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ae4388bac10" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ae4388ba990" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ae4388b9780" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ae4388b9500" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ae4388b8070" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ae4388cf0e0" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ae4388cf810" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ae4388d02b0" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ae4388ce760" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae4388d09b0" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ae4388ce020" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae4388d14c0" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ae4388d1b90" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ae4387a70e0" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ae4387b00e0" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ae4387a7850" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ae4387b2190" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae4387ac9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ae4387b29e0" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ae43887c420" loc="76:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ae4388951f0" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ae4388121b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ae438897390" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438a7c940" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438a7c940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ae438a887c0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae438a8c020" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ae438a8bda0" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ae438a8b7d0" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ae438a8bb10" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ae438a8b020" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ae438a878a0" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ae438a87020" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ae438a8c800" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ae438a794d0" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ae438a79250" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ae438a8adc0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ae438a8a7f0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ae438a8ab30" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ae438a77020" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ae438a79d10" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae438a77820" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ae438a9f7b0" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ae438a9d020" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ae438a9d800" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ae438a9c7d0" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ae438a9a020" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae438a9a830" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ae438a9c020" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae438a993f0" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ae438a99170" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ae438a9f020" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ae438a9b020" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ae438a9b7b0" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438afbc40" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438afbc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ae438af75a0" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae437e2d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438b00cf0" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438b00cf0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ae438b14020" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b14020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ae438b14940" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b14020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ae438b13a50" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ae438b131f0" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ae438b121f0" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae438b08400" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae438b08400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ae438b08640" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ae438b032d0" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae438b052b0" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ae438b04900" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ae438b04330" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ae438b04670" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ae438b05a90" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ae438b03ac0" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae438b072a0" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ae438b07020" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b08640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae438b07ad0" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ae438b328d0" loc="45:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43883fe50"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ae43883e2b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ae438b2fe00" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43884b850"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ae43884bc70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ae438b31b60" loc="49:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43884e020"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ae43884e440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ae438b2f5f0" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43884e020"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ae43884e440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ae438b2f370" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43884e020"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ae43884e440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ae438b2e8a0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43884b850"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ae43884bc70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ae438b2e620" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43884b850"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ae43884bc70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ae438b31350" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43883fe50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ae43883e2b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ae438b310d0" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae43883fe50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ae43883e2b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2ae438b4f020" loc="38:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ae438b4f840" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2ae438b50860" loc="32:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ae438b4e070" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ae438b3a530" loc="21:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae438845780"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ae438845ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ae438b50020" loc="27:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae438845780"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ae438845ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ae438b3ace0" loc="27:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae438845780"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ae438845ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ae438b440d0" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b440d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ae438b409f0" loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae438b43bf0" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae438b44a10" loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b440d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ae438b41390" loc="62:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ae438b3f1f0" loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae438b43440" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b440d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ae438b431c0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae438b440d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae438b41b00" loc="65:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae438b40270" loc="68:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ae438b29a20" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae438b29a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ae438b212d0" loc="98:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ae438b23350" loc="87:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae438b26390" loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae438b29a20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ae438b21cb0" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ae438b21a30" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ae438b38510" loc="110:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae437e2ba90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ae438b25c90" loc="75:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ae438b25500" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ae438b23b10" loc="93:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae4387aa020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae438b26d40" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae438b29a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ae438b26ac0" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae438b29a20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae438b24420" loc="78:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae438b24b70" loc="81:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
